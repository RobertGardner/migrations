{"version":3,"sources":["instruction.js"],"names":[],"mappings":"AAAA;AAAA,KAAK,iBAAiB,AAAC,CAAC,MAAK,QAAQ;aAArC,EAAC,GAAE,YAAqB;AAAE,wBAAwB;IAAE,AAA9B,CAAC;aAAvB,EAAC,GAAE,YAAqB;AAAE,wBAAwB;IAAE,AAA9B,CAAC;AAAvB,WAAS,CAAT,EAAC,KAAI,CAAO,KAAG,AAAS,CAAC;CAAgC,CAAC;;;;SAA1D,EAAC,8CAAoB,CAAA,OAAM,AAAC,kCAAkB,CACtC,CAAA,+CAAqB,wDAA2B,CAAA,+CAAqB,GAAK,EAAC,OAAM,8CAAmB,CAAC,AAD/D,CACgE;AADtG,MAAE;AAAG,aAAS;AAAG,YAAQ;AAAG,mBAAe;AAAG,OAAG;AAAG,cAAU;SAAtE,EAAC,yCAAoB,CAAA,OAAM,AAAC,6BAAkB,CACtC,CAAA,0CAAqB,mDAA2B,CAAA,0CAAqB,GAAK,EAAC,OAAM,yCAAmB,CAAC,AAD/D,CACgE;AAAtG,UAAM;AAAG,iBAAa;SAD9B,EAAC,wCAAoB,CAAA,OAAM,AAAC,4BAAkB,CACtC,CAAA,yCAAqB,kDAA2B,CAAA,yCAAqB,GAAK,EAAC,OAAM,wCAAmB,CAAC,AAD/D,CACgE;AACtG,YAAQ;AAAG,iBAAa;AAFhC,AAAI,EAAA,cAIG,SAAM,YAAU,CAGT,MAAK,AAAU,CAAG;AAC5B,KAAG,OAAO,EAAI,OAAK,CAAC;AACtB,AATsC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC,eAW3B,GAAE,CAAF,UAAI,KAAI,AAAO,CAAW;AACxB,SAAO,CAAA,cAAa,AAAC,CAAC,gBAAe,IAAI,AAAC,CAAC,IAAG,OAAO,CAAG,MAAI,CAAC,CAAC,CAAC;EACjE,MAbmF;AAArF,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAML,SAAQ,GANoB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,AAAI,EAAA,cAmBG,SAAM,YAAU,CAcT,AAA6J;sDAAD,GAAC;AAA5J,WAAK;AAAG,cAAQ;AAAG,aAAO;AAAG,eAAS;AAAG,sBAAgB;;AACpE,KAAG,MAAM,EAAI,MAAI,CAAC;AAClB,KAAG,YAAY,EAAI,WAAS,CAAC;AAC7B,KAAG,eAAe,EAAI,WAAS,CAAC;AAChC,KAAG,YAAY,EAAI,kBAAgB,CAAC;AACpC,KAAI,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAG;AACvB,OAAG,UAAU,EAAI,SAAO,CAAC;AACzB,AAAI,MAAA,CAAA,QAAO,CAAC;AACZ,mBAAe,QAAQ,AAAC,CAAC,IAAG,UAAU,GAAG,SAAC,KAAI,CAAG,CAAA,CAAA,CAAM;AACrD,aAAO,EAAI,CAAA,KAAI,eAAe,CAAC;AAC/B,qBAAe,GAAK,CAAA,KAAI,YAAY,CAAC;IACvC,EAAC,CAAC;AACF,OAAI,SAAQ,AAAC,CAAC,QAAO,CAAC,CAAG;AACvB,SAAG,eAAe,GAAK,SAAO,CAAC;IACjC;AAAA,EACF,KAAO;AACL,OAAG,UAAU,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;EAC5C;AAAA,AACA,KAAG,UAAU,EAAI,UAAQ,CAAC;AAC1B,KAAG,OAAO,EAAI,OAAK,CAAC;AA2CxB,AA/FwC,CAAA;AAAxC,AAAI,EAAA,2BAAoC,CAAA;AAAxC,AAAC,eAAc,YAAY,CAAC,AAAC;AAuD3B,SAAO,CAAP,UAAS,UAAS,AAAO,CAAW;AAClC,SAAO,CAAA,gBAAe,SAAS,AAAC,CAAC,IAAG,UAAU,CAAG,WAAS,CAAC,CAAC;EAC9D;AAKA,SAAO,CAAP,UAAS,UAAS,AAAO,CAAe;AACtC,SAAO,CAAA,gBAAe,IAAI,AAAC,CAAC,IAAG,UAAU,CAAG,WAAS,CAAC,CAAC;EACzD;AAKA,aAAW,CAAX,UAAa,EAAC,AAAS,CAAS;AAC9B,mBAAe,QAAQ,AAAC,CAAC,IAAG,UAAU,CAAG,GAAC,CAAC,CAAC;EAC9C;AAOA,aAAW,CAAX,UAAa,EAAC,AAAS;AACrB,OAAG,aAAa,AAAC,CAAC,EAAC,CAAC,CAAC;AACrB,OAAG,aAAa,AAAC,EAAC,SAAC,gBAAe,CAAG,CAAA,CAAA;WAAM,CAAA,gBAAe,aAAa,AAAC,CAAC,EAAC,CAAC;IAAA,EAAC,CAAC;EAC/E;AAMA,oBAAkB,CAAlB,UAAoB,cAAa,AAAY;AAC3C,OAAG,aAAa,AAAC,EAAC,SAAC,gBAAe,CAAG,CAAA,UAAS,CAAM;AAClD,AAAI,QAAA,CAAA,mBAAkB,EAAI,CAAA,cAAa,SAAS,AAAC,CAAC,UAAS,CAAC,CAAC;AAC7D,SAAI,oBAAmB,AAAC,CAAC,gBAAe,CAAG,oBAAkB,CAAC,CAAG;AAC/D,uBAAe,MAAM,EAAI,KAAG,CAAC;MAC/B;AAAA,IACF,EAAC,CAAC;EACJ;KA9FmF;AAArF,KAAK,eAAe,AAAC,8CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,8CACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,eAAc,KAAO,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAoER,QAAO,GApEwB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,kDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YA6ER,QAAO,GA7EwB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,yDACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAsFW,WAAU,GAtFE;EAAC,CAAC,CAAC,CAAC;AAgGrD,OAAS,qBAAmB,CAAE,MAAK,AAAY,CAAG,CAAA,MAAK,AAAY,CAAY;AAC7E,OAAO,CAAA,MAAK,UAAU,GAAK,CAAA,MAAK,UAAU,CAAA,EACxC,CAAA,gBAAe,OAAO,AAAC,CAAC,MAAK,OAAO,CAAG,CAAA,MAAK,OAAO,CAAC,CAAC;AACzD;AAAA,AApGA,KAAK,eAAe,AAAC,oCACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgGW,WAAU,IAAU,WAAU,GAhGlB;EAAC,CAAC,CAAC,CAAC;AAqGrD,OAAS,YAAU,CAAE,GAAE,AAAU,CAAG,CAAA,EAAC,CAAY;AAC/C,OAAO,CAAA,cAAa,IAAI,AAAC,CAAC,MAAK,AAAC,CAAC,GAAE,CAAG,GAAC,CAAC,CAAC,CAAC;AAC5C;AAAA,AAxGA,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAqGD,SAAQ,OArGgB;EAAC,CAAC,CAAC,CAAC;AAyGrD,OAAS,OAAK,CAAE,GAAE,AAAU,CAAG,CAAA,EAAC,AAAU;AACxC,AAAI,IAAA,CAAA,MAAK,EAAI,CAAA,WAAU,OAAO,AAAC,EAAC,CAAC;AACjC,iBAAe,QAAQ,AAAC,CAAC,GAAE,GAAG,SAAC,KAAI,CAAG,CAAA,GAAE;SAAM,CAAA,WAAU,KAAK,AAAC,CAAC,MAAK,CAAG,CAAA,EAAC,AAAC,CAAC,KAAI,CAAG,IAAE,CAAC,CAAC;EAAA,EAAC,CAAC;AACvF,OAAO,OAAK,CAAC;AACf;AA9GA,KAAK,eAAe,AAAC,sBACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAyGN,SAAQ,IAAO,QAAO,GAzGO;EAAC,CAAC,CAAC,CAAC;AA8GrD","file":"angular2/src/router/instruction.js","sourcesContent":["import {Map, MapWrapper, StringMap, StringMapWrapper, List, ListWrapper} from 'angular2/src/facade/collection';\nimport {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {isPresent, normalizeBlank} from 'angular2/src/facade/lang';\n\nexport class RouteParams {\n  params:StringMap<string, string>;\n\n  constructor(params:StringMap) {\n    this.params = params;\n  }\n\n  get(param:string): string {\n    return normalizeBlank(StringMapWrapper.get(this.params, param));\n  }\n}\n\n/**\n * An `Instruction` represents the component hierarchy of the application based on a given route\n */\nexport class Instruction {\n  component:any;\n  _children:Map<string, Instruction>;\n\n  // the part of the URL captured by this instruction\n  capturedUrl:string;\n\n  // the part of the URL captured by this instruction and all children\n  accumulatedUrl:string;\n\n  params:StringMap<string, string>;\n  reuse:boolean;\n  specificity:number;\n\n  constructor({params, component, children, matchedUrl, parentSpecificity}:{params:StringMap, component:any, children:Map, matchedUrl:string, parentSpecificity:number} = {}) {\n    this.reuse = false;\n    this.capturedUrl = matchedUrl;\n    this.accumulatedUrl = matchedUrl;\n    this.specificity = parentSpecificity;\n    if (isPresent(children)) {\n      this._children = children;\n      var childUrl;\n      StringMapWrapper.forEach(this._children, (child, _) => {\n        childUrl = child.accumulatedUrl;\n        this.specificity += child.specificity;\n      });\n      if (isPresent(childUrl)) {\n        this.accumulatedUrl += childUrl;\n      }\n    } else {\n      this._children = StringMapWrapper.create();\n    }\n    this.component = component;\n    this.params = params;\n  }\n\n  hasChild(outletName:string):boolean {\n    return StringMapWrapper.contains(this._children, outletName);\n  }\n\n  /**\n   * Returns the child instruction with the given outlet name\n   */\n  getChild(outletName:string):Instruction {\n    return StringMapWrapper.get(this._children, outletName);\n  }\n\n  /**\n   * (child:Instruction, outletName:string) => {}\n   */\n  forEachChild(fn:Function): void {\n    StringMapWrapper.forEach(this._children, fn);\n  }\n\n  /**\n   * Does a synchronous, breadth-first traversal of the graph of instructions.\n   * Takes a function with signature:\n   * (child:Instruction, outletName:string) => {}\n   */\n  traverseSync(fn:Function): void {\n    this.forEachChild(fn);\n    this.forEachChild((childInstruction, _) => childInstruction.traverseSync(fn));\n  }\n\n\n  /**\n   * Takes a currently active instruction and sets a reuse flag on each of this instruction's children\n   */\n  reuseComponentsFrom(oldInstruction:Instruction): void {\n    this.traverseSync((childInstruction, outletName) => {\n      var oldInstructionChild = oldInstruction.getChild(outletName);\n      if (shouldReuseComponent(childInstruction, oldInstructionChild)) {\n        childInstruction.reuse = true;\n      }\n    });\n  }\n}\n\nfunction shouldReuseComponent(instr1:Instruction, instr2:Instruction): boolean {\n  return instr1.component == instr2.component &&\n    StringMapWrapper.equals(instr1.params, instr2.params);\n}\n\nfunction mapObjAsync(obj:StringMap, fn): Promise {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:StringMap, fn: Function):List {\n  var result = ListWrapper.create();\n  StringMapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n"]}