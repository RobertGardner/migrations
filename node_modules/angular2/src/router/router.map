{"version":3,"sources":["router.js"],"names":[],"mappings":"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","file":"angular2/src/router/router.js","sourcesContent":["import {Promise, PromiseWrapper, EventEmitter, ObservableWrapper} from 'angular2/src/facade/async';\nimport {Map, MapWrapper, List, ListWrapper} from 'angular2/src/facade/collection';\nimport {isBlank, isPresent, Type} from 'angular2/src/facade/lang';\n\nimport {RouteRegistry} from './route_registry';\nimport {Pipeline} from './pipeline';\nimport {Instruction} from './instruction';\nimport {RouterOutlet} from './router_outlet';\nimport {Location} from './location';\n\n/**\n * # Router\n * The router is responsible for mapping URLs to components.\n *\n * You can see the state of the router by inspecting the read-only field `router.navigating`.\n * This may be useful for showing a spinner, for instance.\n *\n * ## Concepts\n * Routers and component instances have a 1:1 correspondence.\n *\n * The router holds reference to a number of \"outlets.\" An outlet is a placeholder that the\n * router dynamically fills in depending on the current URL.\n *\n * When the router navigates from a URL, it must first recognizes it and serialize it into an `Instruction`.\n * The router uses the `RouteRegistry` to get an `Instruction`.\n *\n * @exportedAs angular2/router\n */\nexport class Router {\n  hostComponent:any;\n  parent:Router;\n  navigating:boolean;\n  lastNavigationAttempt: string;\n  previousUrl:string;\n\n  _currentInstruction:Instruction;\n\n  _pipeline:Pipeline;\n  _registry:RouteRegistry;\n  _outlets:Map<any, RouterOutlet>;\n  _subject:EventEmitter;\n\n\n  constructor(registry:RouteRegistry, pipeline:Pipeline, parent:Router, hostComponent:any) {\n    this.hostComponent = hostComponent;\n    this.navigating = false;\n    this.parent = parent;\n    this.previousUrl = null;\n    this._outlets = MapWrapper.create();\n    this._registry = registry;\n    this._pipeline = pipeline;\n    this._subject = new EventEmitter();\n    this._currentInstruction = null;\n  }\n\n\n  /**\n   * Constructs a child router. You probably don't need to use this unless you're writing a reusable component.\n   */\n  childRouter(hostComponent:any): Router {\n    return new ChildRouter(this, hostComponent);\n  }\n\n\n  /**\n   * Register an object to notify of route changes. You probably don't need to use this unless you're writing a reusable component.\n   */\n  registerOutlet(outlet:RouterOutlet, name: string = 'default'): Promise {\n    MapWrapper.set(this._outlets, name, outlet);\n    if (isPresent(this._currentInstruction)) {\n      var childInstruction = this._currentInstruction.getChild(name);\n      return outlet.activate(childInstruction);\n    }\n    return PromiseWrapper.resolve(true);\n  }\n\n\n  /**\n   * Dynamically update the routing configuration and trigger a navigation.\n   *\n   * # Usage\n   *\n   * ```\n   * router.config({ 'path': '/', 'component': IndexCmp});\n   * ```\n   *\n   * Or:\n   *\n   * ```\n   * router.config([\n   *   { 'path': '/', 'component': IndexComp },\n   *   { 'path': '/user/:id', 'component': UserComp },\n   * ]);\n   * ```\n   *\n   */\n  config(config:any): Promise {\n    if (config instanceof List) {\n      config.forEach((configObject) => {\n        this._registry.config(this.hostComponent, configObject);\n      });\n    } else {\n      this._registry.config(this.hostComponent, config);\n    }\n    return this.renavigate();\n  }\n\n\n  /**\n   * Navigate to a URL. Returns a promise that resolves to the canonical URL for the route.\n   *\n   * If the given URL begins with a `/`, router will navigate absolutely.\n   * If the given URL does not begin with `/`, the router will navigate relative to this component.\n   */\n  navigate(url:string):Promise {\n    if (this.navigating) {\n      return PromiseWrapper.resolve(true);\n    }\n\n    this.lastNavigationAttempt = url;\n\n    var matchedInstruction = this.recognize(url);\n\n    if (isBlank(matchedInstruction)) {\n      return PromiseWrapper.resolve(false);\n    }\n\n    if (isPresent(this._currentInstruction)) {\n      matchedInstruction.reuseComponentsFrom(this._currentInstruction);\n    }\n\n    this._startNavigating();\n\n    var result = this.commit(matchedInstruction)\n        .then((_) => {\n          ObservableWrapper.callNext(this._subject, matchedInstruction.accumulatedUrl);\n          this._finishNavigating();\n        });\n\n    PromiseWrapper.catchError(result, (_) => this._finishNavigating());\n\n    return result;\n  }\n\n  _startNavigating(): void {\n    this.navigating = true;\n  }\n\n  _finishNavigating(): void {\n    this.navigating = false;\n  }\n\n\n  /**\n   * Subscribe to URL updates from the router\n   */\n  subscribe(onNext): void {\n    ObservableWrapper.subscribe(this._subject, onNext);\n  }\n\n\n  /**\n   *\n   */\n  commit(instruction:Instruction):Promise {\n    this._currentInstruction = instruction;\n\n    // collect all outlets that do not have a corresponding child instruction\n    // and remove them from the internal map of child outlets\n    var toDeactivate = ListWrapper.create();\n    MapWrapper.forEach(this._outlets, (outlet, outletName) => {\n      if (!instruction.hasChild(outletName)) {\n        MapWrapper.delete(this._outlets, outletName);\n        ListWrapper.push(toDeactivate, outlet);\n      }\n    });\n\n    return PromiseWrapper.all(ListWrapper.map(toDeactivate, (outlet) => outlet.deactivate()))\n        .then((_) => this.activate(instruction));\n  }\n\n\n  /**\n   * Recursively remove all components contained by this router's outlets.\n   * Calls deactivate hooks on all descendant components\n   */\n  deactivate():Promise {\n    return this._eachOutletAsync((outlet) => outlet.deactivate);\n  }\n\n\n  /**\n   * Recursively activate.\n   * Calls the \"activate\" hook on descendant components.\n   */\n  activate(instruction:Instruction):Promise {\n    return this._eachOutletAsync((outlet, name) => outlet.activate(instruction.getChild(name)));\n  }\n\n\n  _eachOutletAsync(fn):Promise {\n    return mapObjAsync(this._outlets, fn);\n  }\n\n\n  /**\n   * Given a URL, returns an instruction representing the component graph\n   */\n  recognize(url:string): Instruction {\n    return this._registry.recognize(url, this.hostComponent);\n  }\n\n\n  /**\n   * Navigates to either the last URL successfully navigated to, or the last URL requested if the router has yet to successfully navigate.\n   */\n  renavigate():Promise {\n    var destination = isBlank(this.previousUrl) ? this.lastNavigationAttempt : this.previousUrl;\n    if (this.navigating || isBlank(destination)) {\n      return PromiseWrapper.resolve(false);\n    }\n    return this.navigate(destination);\n  }\n\n\n  /**\n   * Generate a URL from a component name and optional map of parameters. The URL is relative to the app's base href.\n   */\n  generate(name:string, params:StringMap<string, string>): string {\n    return this._registry.generate(name, params, this.hostComponent);\n  }\n}\n\nexport class RootRouter extends Router {\n  _location:Location;\n\n  constructor(registry:RouteRegistry, pipeline:Pipeline, location:Location, hostComponent:Type) {\n    super(registry, pipeline, null, hostComponent);\n    this._location = location;\n    this._location.subscribe((change) => this.navigate(change['url']));\n    this._registry.configFromComponent(hostComponent);\n    this.navigate(location.path());\n  }\n\n  commit(instruction):Promise {\n    return super.commit(instruction).then((_) => {\n      this._location.go(instruction.accumulatedUrl);\n    });\n  }\n}\n\nclass ChildRouter extends Router {\n  constructor(parent:Router, hostComponent) {\n    super(parent._registry, parent._pipeline, parent, hostComponent);\n    this.parent = parent;\n  }\n}\n\nfunction mapObjAsync(obj:Map, fn): Promise {\n  return PromiseWrapper.all(mapObj(obj, fn));\n}\n\nfunction mapObj(obj:Map, fn):List {\n  var result = ListWrapper.create();\n  MapWrapper.forEach(obj, (value, key) => ListWrapper.push(result, fn(value, key)));\n  return result;\n}\n"]}