{"version":3,"sources":["router_outlet.js"],"names":[],"mappings":"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","file":"angular2/src/router/router_outlet.js","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport {Directive} from 'angular2/src/core/annotations_impl/annotations';\nimport {Attribute} from 'angular2/src/core/annotations_impl/di';\nimport {DynamicComponentLoader, ComponentRef, ElementRef} from 'angular2/core';\nimport {Injector, bind} from 'angular2/di';\n\nimport * as routerMod from './router';\nimport {Instruction, RouteParams} from './instruction'\n\n\n/**\n * A router outlet is a placeholder that Angular dynamically fills based on the application's route.\n *\n * ## Use\n *\n * ```\n * <router-outlet></router-outlet>\n * ```\n *\n * Route outlets can also optionally have a name:\n *\n * ```\n * <router-outlet name=\"side\"></router-outlet>\n * <router-outlet name=\"main\"></router-outlet>\n * ```\n *\n */\n@Directive({\n  selector: 'router-outlet'\n})\nexport class RouterOutlet {\n  _injector:Injector;\n  _parentRouter:routerMod.Router;\n  _childRouter:routerMod.Router;\n  _loader:DynamicComponentLoader;\n  _componentRef:ComponentRef;\n  _elementRef:ElementRef;\n  _currentInstruction:Instruction;\n\n  constructor(elementRef:ElementRef, loader:DynamicComponentLoader, router:routerMod.Router, injector:Injector, @Attribute('name') nameAttr:String) {\n    if (isBlank(nameAttr)) {\n      nameAttr = 'default';\n    }\n    this._loader = loader;\n    this._parentRouter = router;\n    this._elementRef = elementRef;\n    this._injector = injector;\n\n    this._childRouter = null;\n    this._componentRef = null;\n    this._currentInstruction = null;\n    this._parentRouter.registerOutlet(this, nameAttr);\n  }\n\n  /**\n   * Given an instruction, update the contents of this viewport.\n   */\n  activate(instruction:Instruction): Promise {\n    // if we're able to reuse the component, we just have to pass along the instruction to the component's router\n    // so it can propagate changes to its children\n    if ((instruction == this._currentInstruction) || instruction.reuse && isPresent(this._childRouter)) {\n      return this._childRouter.commit(instruction);\n    }\n\n    this._currentInstruction = instruction;\n    this._childRouter = this._parentRouter.childRouter(instruction.component);\n    var outletInjector = this._injector.resolveAndCreateChild([\n      bind(RouteParams).toValue(new RouteParams(instruction.params)),\n      bind(routerMod.Router).toValue(this._childRouter)\n    ]);\n\n    if (isPresent(this._componentRef)) {\n      this._componentRef.dispose();\n    }\n\n    return this._loader.loadNextToExistingLocation(instruction.component, this._elementRef, outletInjector).then((componentRef) => {\n      this._componentRef = componentRef;\n      return this._childRouter.commit(instruction);\n    });\n  }\n\n  deactivate():Promise {\n    return (isPresent(this._childRouter) ? this._childRouter.deactivate() : PromiseWrapper.resolve(true))\n        .then((_) =>this._componentRef.dispose());\n  }\n\n  canDeactivate(instruction:Instruction): Promise<boolean> {\n    // TODO: how to get ahold of the component instance here?\n    return PromiseWrapper.resolve(true);\n  }\n}\n"]}