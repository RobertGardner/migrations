{"version":3,"sources":["router_link.js"],"names":[],"mappings":"AAAA,KAAO,EAAC,SAAQ;AAAG,iBAAe,CAAC,KAAO,iDAA+C,CAAC;AAC1F,KAAO,EAAC,UAAS,CAAC,KAAO,gBAAc,CAAC;AACxC,KAAO,EAAC,SAAQ;AAAG,iBAAe,CAAC,KAAO,iCAA+B,CAAC;AAE1E,KAAO,EAAC,SAAQ,CAAC,KAAO,2BAAyB,CAAC;AAClD,KAAO,EAAC,GAAE,CAAC,KAAO,+BAA6B,CAAC;AAEhD,KAAO,EAAC,MAAK,CAAC,KAAO,WAAS,CAAC;AAC/B,KAAO,EAAC,QAAO,CAAC,KAAO,aAAW,CAAC;AA+BnC,KAAO,MAAM,WAAS;AAWpB,YAAU,CAAE,UAAS,AAAW,CAAG,CAAA,MAAK,AAAO,CAAG,CAAA,QAAO,AAAS,CAAG;AACnE,OAAG,OAAO,EAAI,CAAA,UAAS,WAAW,CAAC;AACnC,OAAG,QAAQ,EAAI,OAAK,CAAC;AACrB,OAAG,UAAU,EAAI,SAAO,CAAC;AACzB,OAAG,QAAQ,EAAI,CAAA,gBAAe,OAAO,AAAC,EAAC,CAAC;AACxC,MAAE,GAAG,AAAC,CAAC,IAAG,OAAO,CAAG,QAAM,CAAG,EAAC,GAAE,IAAM;AACpC,QAAE,eAAe,AAAC,EAAC,CAAC;AACpB,SAAG,QAAQ,SAAS,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;IAC7C,CAAC,CAAC;EACJ;AAAA,AAEA,IAAI,MAAI,CAAE,OAAM,AAAQ,CAAG;AACzB,OAAG,OAAO,EAAI,QAAM,CAAC;EACvB;AAAA,AAEA,IAAI,OAAK,CAAE,OAAM,AAAW,CAAG;AAC7B,OAAG,QAAQ,EAAI,QAAM,CAAC;EACxB;AAAA,AAEA,iBAAe,CAAE,AAAD,CAAS;AACvB,OAAI,SAAQ,AAAC,CAAC,IAAG,OAAO,CAAC,CAAA,EAAK,CAAA,SAAQ,AAAC,CAAC,IAAG,QAAQ,CAAC,CAAG;AACrD,SAAG,gBAAgB,EAAI,CAAA,IAAG,QAAQ,SAAS,AAAC,CAAC,IAAG,OAAO,CAAG,CAAA,IAAG,QAAQ,CAAC,CAAC;AACvE,SAAG,aAAa,EAAI,CAAA,IAAG,UAAU,oBAAoB,AAAC,CAAC,IAAG,gBAAgB,CAAC,CAAC;AAG5E,QAAE,aAAa,AAAC,CAAC,IAAG,OAAO,CAAG,OAAK,CAAG,CAAA,IAAG,aAAa,CAAC,CAAC;IAC1D;AAAA,EACF;AAAA,AACF;AAAA,AA9EA,KAAK,eAAe,AAAC,2BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,cA8BzB,UAAQ,AAAC,CAAC;AACT,aAAO,CAAG,gBAAc;AACxB,eAAS,CAAG;AACV,cAAM,CAAG,aAAW;AACpB,eAAO,CAAG,eAAa;AAAA,MACzB;AACA,cAAQ,CAAG,EAAC,gBAAe,CAAC;AAAA,IAC9B,CAAC,EArCgD;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,0BACb,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAiDD,UAAS,IAAU,MAAK,IAAY,QAAO,GAjDnB;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,CAArB,MAAK,yBAAyB,+BAAmB,mBACzC,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAD1B,MAAK,KAAgB,UAC4B;EAAC,CAAC,CAAC,CAAC;AADrD,KAAK,eAAe,AAAC,CAArB,MAAK,yBAAyB,gCAAmB,mBACzC,EAAC,GAAE,CAAG,UAAS,AAAD,CAAG;AAAC,YAgEJ,SAAQ,GAhEmB;EAAC,CAAC,CAAC,CAAC;AA8ErD","file":"angular2/src/router/router_link.es6","sourcesContent":["import {Directive, onAllChangesDone} from 'angular2/src/core/annotations_impl/annotations';\nimport {ElementRef} from 'angular2/core';\nimport {StringMap, StringMapWrapper} from 'angular2/src/facade/collection';\n\nimport {isPresent} from 'angular2/src/facade/lang';\nimport {DOM} from 'angular2/src/dom/dom_adapter';\n\nimport {Router} from './router';\nimport {Location} from './location';\n\n/**\n * The RouterLink directive lets you link to specific parts of your app.\n *\n *\n * Consider the following route configuration:\n\n * ```\n * @RouteConfig({\n *   path: '/user', component: UserCmp, alias: 'user'\n * });\n * class MyComp {}\n * ```\n *\n * When linking to a route, you can write:\n *\n * ```\n * <a router-link=\"user\">link to user component</a>\n * ```\n *\n * @exportedAs angular2/router\n */\n@Directive({\n  selector: '[router-link]',\n  properties: {\n    'route': 'routerLink',\n    'params': 'routerParams'\n  },\n  lifecycle: [onAllChangesDone]\n})\nexport class RouterLink {\n  _domEl;\n  _route:string;\n  _params:StringMap<string, string>;\n  _router:Router;\n  _location:Location;\n  // the url displayed on the anchor element.\n  _visibleHref: string;\n  // the url passed to the router navigation.\n  _navigationHref: string;\n\n  constructor(elementRef:ElementRef, router:Router, location:Location) {\n    this._domEl = elementRef.domElement;\n    this._router = router;\n    this._location = location;\n    this._params = StringMapWrapper.create();\n    DOM.on(this._domEl, 'click', (evt) => {\n      evt.preventDefault();\n      this._router.navigate(this._navigationHref);\n    });\n  }\n\n  set route(changes: string) {\n    this._route = changes;\n  }\n\n  set params(changes: StringMap) {\n    this._params = changes;\n  }\n\n  onAllChangesDone(): void {\n    if (isPresent(this._route) && isPresent(this._params)) {\n      this._navigationHref = this._router.generate(this._route, this._params);\n      this._visibleHref = this._location.normalizeAbsolutely(this._navigationHref);\n      // Keeping the link on the element to support contextual menu `copy link`\n      // and other in-browser affordances.\n      DOM.setAttribute(this._domEl, 'href', this._visibleHref);\n    }\n  }\n}\n"]}