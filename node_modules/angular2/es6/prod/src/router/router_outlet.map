{"version":3,"sources":["router_outlet.js"],"names":[],"mappings":"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","file":"angular2/src/router/router_outlet.es6","sourcesContent":["import {Promise, PromiseWrapper} from 'angular2/src/facade/async';\nimport {isBlank, isPresent} from 'angular2/src/facade/lang';\n\nimport {Directive} from 'angular2/src/core/annotations_impl/annotations';\nimport {Attribute} from 'angular2/src/core/annotations_impl/di';\nimport {DynamicComponentLoader, ComponentRef, ElementRef} from 'angular2/core';\nimport {Injector, bind} from 'angular2/di';\n\nimport * as routerMod from './router';\nimport {Instruction, RouteParams} from './instruction'\n\n\n/**\n * A router outlet is a placeholder that Angular dynamically fills based on the application's route.\n *\n * ## Use\n *\n * ```\n * <router-outlet></router-outlet>\n * ```\n *\n * Route outlets can also optionally have a name:\n *\n * ```\n * <router-outlet name=\"side\"></router-outlet>\n * <router-outlet name=\"main\"></router-outlet>\n * ```\n *\n */\n@Directive({\n  selector: 'router-outlet'\n})\nexport class RouterOutlet {\n  _injector:Injector;\n  _parentRouter:routerMod.Router;\n  _childRouter:routerMod.Router;\n  _loader:DynamicComponentLoader;\n  _componentRef:ComponentRef;\n  _elementRef:ElementRef;\n  _currentInstruction:Instruction;\n\n  constructor(elementRef:ElementRef, loader:DynamicComponentLoader, router:routerMod.Router, injector:Injector, @Attribute('name') nameAttr:String) {\n    if (isBlank(nameAttr)) {\n      nameAttr = 'default';\n    }\n    this._loader = loader;\n    this._parentRouter = router;\n    this._elementRef = elementRef;\n    this._injector = injector;\n\n    this._childRouter = null;\n    this._componentRef = null;\n    this._currentInstruction = null;\n    this._parentRouter.registerOutlet(this, nameAttr);\n  }\n\n  /**\n   * Given an instruction, update the contents of this viewport.\n   */\n  activate(instruction:Instruction): Promise {\n    // if we're able to reuse the component, we just have to pass along the instruction to the component's router\n    // so it can propagate changes to its children\n    if ((instruction == this._currentInstruction) || instruction.reuse && isPresent(this._childRouter)) {\n      return this._childRouter.commit(instruction);\n    }\n\n    this._currentInstruction = instruction;\n    this._childRouter = this._parentRouter.childRouter(instruction.component);\n    var outletInjector = this._injector.resolveAndCreateChild([\n      bind(RouteParams).toValue(new RouteParams(instruction.params)),\n      bind(routerMod.Router).toValue(this._childRouter)\n    ]);\n\n    if (isPresent(this._componentRef)) {\n      this._componentRef.dispose();\n    }\n\n    return this._loader.loadNextToExistingLocation(instruction.component, this._elementRef, outletInjector).then((componentRef) => {\n      this._componentRef = componentRef;\n      return this._childRouter.commit(instruction);\n    });\n  }\n\n  deactivate():Promise {\n    return (isPresent(this._childRouter) ? this._childRouter.deactivate() : PromiseWrapper.resolve(true))\n        .then((_) =>this._componentRef.dispose());\n  }\n\n  canDeactivate(instruction:Instruction): Promise<boolean> {\n    // TODO: how to get ahold of the component instance here?\n    return PromiseWrapper.resolve(true);\n  }\n}\n"]}